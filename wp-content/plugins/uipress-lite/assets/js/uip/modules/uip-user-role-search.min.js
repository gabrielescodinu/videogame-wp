export function moduleData(){return{props:{selected:Array,searchPlaceHolder:String,updateSelected:Function,returnType:String},data:function(){return{loading:!1,thisSearchInput:"",options:[],selectedOptions:this.selected,ui:{dropOpen:!1}}},inject:["uipress"],computed:{formattedOptions(){return this.options}},watch:{selectedOptions:{handler(t,e){},deep:!0},thisSearchInput:function(t,e){if(self=this,""==t)return;let i="users";"userrole"==self.returnType&&(i="roles");let n=new FormData;n.append("action","uip_search_user_roles"),n.append("security",uip_ajax.security),n.append("searchString",t),n.append("type",i),self.loading=!0,self.uipress.callServer(uip_ajax.ajax_url,n).then(t=>{self.loading=!1,t.error?self.uipress.notify(t.error,"error"):self.options=t.roles})}},methods:{addSelected(t){"userrole"==self.returnType&&this.updateSelected(t.label),"userlogin"==self.returnType&&this.updateSelected(t.login),"userid"==self.returnType&&this.updateSelected(t.id),"useremail"==self.returnType&&this.updateSelected(t.email)},ifInSearch(t,e){let i=t.name.toLowerCase(),n=e.toLowerCase();return!!i.includes(n)},onClickOutside(t){const e=t.path||(t.composedPath?t.composedPath():void 0);!e||e.includes(this.$el)||this.$el.contains(t.target)||this.closeThisComponent()},openThisComponent(){this.ui.dropOpen=!0,requestAnimationFrame(()=>{document.documentElement.addEventListener("click",this.onClickOutside,!1)})},closeThisComponent(){this.ui.dropOpen=!1,document.documentElement.removeEventListener("click",this.onClickOutside,!1)}},template:'\n    <div class="uip-position-relative" @click="openThisComponent">\n    \n\t\t  <div class="uip-padding-xxs uip-background-muted uip-border-round uip-w-100p uip-max-w-400 uip-cursor-pointer uip-border-box" :class="{\'uip-active-outline\' : ui.dropOpen}"> \n\t\t    <div class="uip-flex uip-flex-center">\n\t\t\t   <span class="uip-icon uip-text-muted">search</span>\n\t\t    </div>\n\t\t  </div>\n      \n\t\t  <div v-if="ui.dropOpen" class="uip-position-absolute uip-background-default uip-border-round uip-border uip-w-250 uip-max-w-400 uip-border-box uip-z-index-9 uip-margin-top-xs uip-overflow-hidden uip-right-0">\n\t\t    <div class="uip-flex uip-background-default uip-padding-xs uip-border-bottom">\n\t\t\t  <span class="uip-icon uip-text-muted uip-margin-right-xs">search</span>\n\t\t\t  <input class="uip-blank-input uip-flex-grow" type="search"  \n\t\t\t  :placeholder="searchPlaceHolder" v-model="thisSearchInput" autofocus>\n\t\t    </div>\n\t\t    <div class="uip-max-h-280 uip-overflow-auto">\n        <div v-if="loading" class="uip-padding-s uip-flex uip-flex-center uip-flex-middle"><loading-chart></loading-chart></div>\n\t\t\t  <template v-if="!loading" v-for="option in formattedOptions">\n\t\t\t    <div class="uip-background-default uip-padding-xs hover:uip-background-muted" \n\t\t\t    @click="addSelected(option)" \n\t\t\t    v-if="ifInSearch(option, thisSearchInput)" \n\t\t\t    style="cursor: pointer">\n\t\t\t\t  <div class="uip-flex uip-flex-row uip-flex-center">\n\t\t\t\t    <div class="uip-flex-grow">\n\t\t\t\t\t  <div class="uip-text-bold uip-text-emphasis">{{option.label}}</div>\n\t\t\t\t\t  <div class="uip-text-muted">{{option.type}}</div>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t    </div>\n\t\t\t  </template>\n\t\t    </div>\n\t\t  </div>\n\t  </div>'}};